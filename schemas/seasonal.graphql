type SeasonalEvent @model
  @auth(rules: [
    { allow: groups, groups: ["Admin", "ContentManager"], operations: [create, read, update, delete] },
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  name: String!
  description: String!
  startDate: AWSDateTime!
  endDate: AWSDateTime!
  featuredProducts: [ID]
  featuredFarms: [ID]
  featuredCategories: [ID]
  bannerImageUrl: String
  thumbnailImageUrl: String
  isActive: Boolean!
  priority: Int
  zoneIDs: [ID]
  promotionID: ID
  promotion: Promotion @belongsTo(fields: ["promotionID"])
  createdAt: AWSDateTime @timestamp(createdAt: true)
  updatedAt: AWSDateTime @timestamp(updatedAt: true)
}

type SeasonalCalendar @model
  @auth(rules: [
    { allow: groups, groups: ["Admin", "ContentManager"], operations: [create, read, update, delete] },
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  year: Int!
  seasons: [SeasonalPeriod]
  zoneID: ID
  zone: Zone @belongsTo(fields: ["zoneID"])
  createdAt: AWSDateTime @timestamp(createdAt: true)
  updatedAt: AWSDateTime @timestamp(updatedAt: true)
}

type SeasonalPeriod {
  id: ID!
  name: String!
  startDate: AWSDate!
  endDate: AWSDate!
  produceInSeason: [ID]
  description: String
  iconUrl: String
}
